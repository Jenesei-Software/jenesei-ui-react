import{j as a,l as x,K as f,d as r}from"./global-styles-67b47ce5.js";import{r as s}from"./index-ff614419.js";import{C as v}from"./checkbox.styles-9633e35a.js";import{g as k}from"./font.functions-5943c7fc.js";import"./modal-loading.styles-fb66b78f.js";const d=e=>{const c=l=>({__html:l}),u=s.useCallback(l=>{const o=e.value.some(n=>n[e.valueField]===l[e.valueField])?e.value.filter(n=>n[e.valueField]!==l[e.valueField]):e.multiple?[...e.value,l]:[l];e.onChange&&e.onChange(o)},[e]);return a.jsx(y,{className:e.className,$width:e.width,$size:e.size,children:e.options.map((l,i)=>{const o=e.value.some(n=>n[e.valueField]===l[e.valueField]);return a.jsxs(p,{onClick:()=>!e.isClickOnlyIcon&&u(l),children:[a.jsx(v,{genre:e.checkboxGenre,isHiddenBorder:e.checkboxIsHiddenBorder,view:e.checkBoxView,size:e.size,width:e.checkboxWidth,checked:o,children:e.labelField&&(l==null?void 0:l[e.labelField])!==void 0&&a.jsx(F,{dangerouslySetInnerHTML:c(l[e.labelField])})}),e.childrenField&&(l==null?void 0:l[e.childrenField])!==void 0&&a.jsx(V,{children:l[e.childrenField]})]},i)})})};try{d.displayName="Checkboxes",d.__docgenInfo={description:"",displayName:"Checkboxes",props:{checkboxGenre:{defaultValue:null,description:"",name:"checkboxGenre",required:!0,type:{name:"enum",value:[{value:'"gray"'},{value:'"grayBorder"'},{value:'"black"'},{value:'"blackBorder"'},{value:'"product"'},{value:'"productBorder"'},{value:'"white"'},{value:'"greenTransparent"'},{value:'"redTransparent"'}]}},checkBoxView:{defaultValue:null,description:"",name:"checkBoxView",required:!0,type:{name:"enum",value:[{value:'"square"'},{value:'"circle"'}]}},checkboxWidth:{defaultValue:null,description:"",name:"checkboxWidth",required:!1,type:{name:"string"}},checkboxIsHiddenBorder:{defaultValue:null,description:"",name:"checkboxIsHiddenBorder",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},childrenField:{defaultValue:null,description:"",name:"childrenField",required:!1,type:{name:"string | number | symbol"}},isClickOnlyIcon:{defaultValue:null,description:"",name:"isClickOnlyIcon",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"",name:"size",required:!0,type:{name:"enum",value:[{value:'"large"'},{value:'"largeMedium"'},{value:'"medium"'},{value:'"mediumSmall"'},{value:'"small"'}]}},labelField:{defaultValue:null,description:"",name:"labelField",required:!1,type:{name:"string | number | symbol"}},multiple:{defaultValue:null,description:"",name:"multiple",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((props: T[]) => void)"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"T[]"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"T[]"}},valueField:{defaultValue:null,description:"",name:"valueField",required:!0,type:{name:"string | number | symbol"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string"}}}}}catch{}const g=x(["",";"],e=>C(f[e.$size])),C=e=>x(["gap:","px;",";"],e.padding-2,k(e.font,600,"Inter")),y=r.div.withConfig({componentId:"sc-b8ohbc-0"})(["display:flex;flex-direction:column;align-items:stretch;width:",";",";"],e=>e.$width??"100%",g),p=r.div.withConfig({componentId:"sc-b8ohbc-1"})(["display:flex;flex-direction:row;align-items:center;"]),F=r.div.withConfig({componentId:"sc-b8ohbc-2"})(["user-select:none;"]),V=r.div.withConfig({componentId:"sc-b8ohbc-3"})(["user-select:none;"]),j={component:d,title:"Checkbox/Checkboxes"},w={checkboxGenre:"gray",checkBoxView:"circle",checkboxWidth:"100%",checkboxIsHiddenBorder:!1,multiple:!0,size:"medium",labelField:"label",valueField:"value",width:"300px"},I=e=>{const[c,u]=s.useState([]),[l]=s.useState([{value:0,label:"First"},{value:1,label:"Second"}]);return a.jsx(d,{...e,value:c,options:l,onChange:i=>u(i)})},t={render:e=>a.jsx(I,{...e}),args:{...w}};var m,h,b;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: args => <CheckboxesWrapper {...args} />,
  args: {
    ...defaultArgs
  }
}`,...(b=(h=t.parameters)==null?void 0:h.docs)==null?void 0:b.source}}};const T=["Default"];export{t as Default,T as __namedExportsOrder,j as default};
