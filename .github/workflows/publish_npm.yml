name: Publish NPM

on:
  push:
    branches:
      - publish

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Clean git working directory
        run: |
          git reset --hard || echo "No changes to reset"
          git clean -fd || echo "No files to clean"

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Bump version
        id: bump_version
        run: |
          # Uncomment the desired version bump type
          npm version patch
          # npm version minor
          # npm version major
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

      - name: Commit changes
        run: |
          git add package.json package-lock.json
          git commit -m "Bump version to $NEW_VERSION" || echo "Nothing to commit"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT_CYRILSTRONE_ACTION }}
          branch: publish
          tags: true

      - name: Configure npm for GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PAT_CYRILSTRONE_ACTION }}" >> ~/.npmrc

      - name: Check if version exists in GitHub Packages
        id: check_version_github
        run: |
          EXISTING_VERSION=$(npm view @jenesei-software/jenesei-ui-react versions --registry https://npm.pkg.github.com --json | grep ${NEW_VERSION} || true)
          if [ -n "$EXISTING_VERSION" ]; then
            echo "Version ${NEW_VERSION} already exists. Skipping publish."
            echo "publishGH=false" >> $GITHUB_ENV
          else
            echo "publishGH=true" >> $GITHUB_ENV
          fi

      - name: Check if version exists in NPM
        id: check_version_npm
        run: |
          EXISTING_VERSION=$(npm view @jenesei-software/jenesei-ui-react versions --json | grep ${NEW_VERSION} || true)
          if [ -n "$EXISTING_VERSION" ]; then
            echo "Version ${NEW_VERSION} already exists. Skipping publish."
            echo "publishNPM=false" >> $GITHUB_ENV
          else
            echo "publishNPM=true" >> $GITHUB_ENV
          fi

      - name: Install dependencies
        if: env.publishGH == 'true' && env.publishNPM == 'true'
        run: |
          npm install

      - name: Build
        if: env.publishGH == 'true' && env.publishNPM == 'true'
        run: |
          npm run build

      - name: Publish to GitHub Packages
        if: env.publishGH == 'true' && env.publishNPM == 'true'
        run: |
          npm publish --registry=https://npm.pkg.github.com/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PAT_CYRILSTRONE_ACTION }}

      - name: Publish to NPM
        if: env.publishGH == 'true' && env.publishNPM == 'true'
        run: |
          npm publish --registry=https://registry.npmjs.org/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_CYRILSTRONE_TOKEN }}
